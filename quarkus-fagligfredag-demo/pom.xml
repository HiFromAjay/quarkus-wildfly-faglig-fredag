<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>dk.jarry.fagligfredag</groupId>
	<artifactId>quarkus-fagligfredag-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>

		<quarkus.version>1.0.0.Final</quarkus.version>
		<surefire-plugin.version>2.22.1</surefire-plugin.version>
		<compiler-plugin.version>3.8.0</compiler-plugin.version>
		<docker-plugin.version>0.28.0</docker-plugin.version>

		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.quarkus</groupId>
				<artifactId>quarkus-bom</artifactId>
				<scope>import</scope>
				<type>pom</type>
				<version>${quarkus.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>

		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-smallrye-jwt</artifactId>
		</dependency>

		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-resteasy</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-resteasy-jsonb</artifactId>
		</dependency>

		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-hibernate-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-jdbc-postgresql</artifactId>
		</dependency>

		<!-- Elytron Security extension -->
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-elytron-security</artifactId>
		</dependency>

		<!-- MicroProfile OpenAPI -->
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-smallrye-openapi</artifactId>
		</dependency>

		<!-- MicroProfile Health -->
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-smallrye-health</artifactId>
		</dependency>

		<!-- MicroProfile Metrics -->
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-smallrye-metrics</artifactId>
		</dependency>

		<!-- Enable Kubernetes support -->
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-kubernetes</artifactId>
		</dependency>

		<!-- Testing: -->
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-junit5</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler-plugin.version}</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<!-- the parameters=true option is critical so that RESTEasy works fine -->
					<parameters>true</parameters>
				</configuration>
			</plugin>

			<plugin>
				<!-- you need this specific version to integrate with the other build 
					helpers -->
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire-plugin.version}</version>
				<configuration>
					<systemProperties>
						<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
					</systemProperties>
				</configuration>
			</plugin>

			<plugin>
				<!-- This is what injects the magic Quarkus bytecode -->
				<groupId>io.quarkus</groupId>
				<artifactId>quarkus-maven-plugin</artifactId>
				<version>${quarkus.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<profiles>

		<profile>
			<id>postgresql</id>
			<build>
				<plugins>
					<plugin>
						<!-- Automatically start PostgreSQL for integration testing - requires 
							Docker -->
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>${docker-plugin.version}</version>
						<configuration>
							<images>
								<image>
									<name>postgres:10.5</name>
									<alias>postgresqldemo</alias>
									<run>
										<env>
											<POSTGRES_USER>hibernate</POSTGRES_USER>
											<POSTGRES_PASSWORD>hibernate</POSTGRES_PASSWORD>
											<POSTGRES_DB>hibernate_db</POSTGRES_DB>
										</env>
										<containerNamePattern>%a</containerNamePattern>
										<hostname>postgresqldemo</hostname>
										<network>
											<name>demo-net</name>
										</network>
										<ports>
											<port>5432:5432</port>
										</ports>
										<log>
											<prefix>PostgreSQL: </prefix>
											<date>default</date>
											<color>cyan</color>
										</log>
										<wait>
											<tcp>
												<mode>mapped</mode>
												<ports>
													<port>5432</port>
												</ports>
											</tcp>
											<time>10000</time>
										</wait>
									</run>
								</image>
							</images>
						</configuration>
						<executions>
							<execution>
								<id>docker-start</id>
								<phase>test-compile</phase>
								<goals>
									<goal>stop</goal>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>docker-stop</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- Optionally activate this profile to compile the demo into native! -->
			<id>native</id>
			<activation>
				<property>
					<name>native</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>io.quarkus</groupId>
						<artifactId>quarkus-maven-plugin</artifactId>
						<version>${quarkus.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>native-image</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>${surefire-plugin.version}</version>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
								<configuration>
									<systemProperties>
										<native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>
									</systemProperties>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>